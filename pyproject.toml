[project]
name = "pythonz"
dynamic = ["version"]
description = "Source code for pythonz.net"
authors = [
    { name = "Igor Starikov", email = "idlesign@yandex.ru" }
]
readme = "README.md"
license = "GPL-3.0-only"
license-files = ["LICENSE"]
requires-python = ">=3.13"
dependencies = [
    "awesome-slugify~=1.6.5",
    "beautifulsoup4~=4.13",
    "bleach~=6.2.0",
    "django~=5.2.4",
    "django-admirarchy~=1.2.2",
    "django-etc~=1.4.0",
    "django-robots~=6.1",
    "django-simple-history~=3.10.1",
    "django-siteajax~=1.0.0",
    "django-siteblocks~=1.2.1",
    "django-sitecats~=1.2.2",
    "django-siteflags~=1.3.0",
    "django-siteforms~=1.2.0",
    "django-sitegate~=1.3.3",
    "django-sitemessage~=1.4.0",
    "django-sitemetrics~=1.2.0",
    "django-siteprefs~=1.2.3",
    "django-sitetree~=1.18.0",
    "django-yaturbo~=1.0.1",
    "envbox~=1.3.0",
    "feedparser~=6.0.11",
    "icalendar-light~=1.0.0",
    "lxml~=6.0.0",
    "pillow~=11.3.0",
    "psycopg~=3.2.9",
    "pytelegrambotapi~=4.9.0",
    "pytz~=2025.2",
    "regex~=2024.11.6",
    "requests[socks]~=2.32.4",
    "sentry-sdk~=2.32.0",
    "twitter~=1.19.6",
    "uwsgi~=2.0.30",
    "uwsgiconf[cli]~=2.0.0",
]

[project.urls]
Homepage = "https://github.com/idlesign/pythonz"

[project.scripts]
pythonz = "pythonz.manage:main"

[dependency-groups]
dev = [
    {include-group = "linters"},
    {include-group = "tests"},
    {include-group = "runtime"},
]
linters = [
    "ruff",
]
tests = [
    "pytest",
    "pytest-djangoapp>=1.3.0",
    "pytest-responsemock",
    "freezegun",
]
runtime = [
    "django-debug-toolbar~=5.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "pythonz/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["pythonz/"]

[tool.hatch.build.targets.sdist]
packages = ["pythonz/"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
    "slow: long running tests",
]
addopts = "--strict-markers"

[tool.coverage.run]
source = [
    "pythonz/",
]
omit = [
    "pythonz/apps/migrations/*",
]

[tool.coverage.report]
fail_under = 90.00
exclude_also = [
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.tox]
skip_missing_interpreters = true
env_list = [
  "py310",
  "py311",
  "py312",
  "py313",
]

[tool.tox.env_run_base]
dependency_groups = ["tests"]
commands = [
  ["pytest", { replace = "posargs", default = ["tests"], extend = true }],
]
